stages:
  - build
  - combine
  - deploy
variables:
  GIT_DEPTH: "1"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_TEST_ARM_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-arm
  CONTAINER_TEST_X86_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-x86
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
build-x86:
  stage: build
  tags:
    - docker
  script:
    - TARGET_IMAGE=$CONTAINER_TEST_X86_IMAGE
    - docker build --pull -t $TARGET_IMAGE .
    - docker push $TARGET_IMAGE
build-arm:
  stage: build
  tags:
    - docker-arm
  script:
    - TARGET_IMAGE=$CONTAINER_TEST_ARM_IMAGE
    - docker build --pull -t $TARGET_IMAGE .
    - docker push $TARGET_IMAGE
combine:
  stage: combine
  tags:
    - docker
  script:
    - TARGET_IMAGE=$CONTAINER_TEST_IMAGE
    - SOURCE_IMAGE_2=$CONTAINER_TEST_ARM_IMAGE
    - SOURCE_IMAGE_1=$CONTAINER_TEST_X86_IMAGE
    - docker pull $SOURCE_IMAGE_1
    - docker pull $SOURCE_IMAGE_2
    - docker manifest create $TARGET_IMAGE --amend $SOURCE_IMAGE_1 --amend
      $SOURCE_IMAGE_2
    - docker manifest push $TARGET_IMAGE
deploy_latest:
  stage: deploy
  tags:
    - docker
  script:
    - TARGET_IMAGE=$CONTAINER_RELEASE_IMAGE
    - SOURCE_IMAGE=$CONTAINER_TEST_IMAGE
    - docker pull $SOURCE_IMAGE
    - docker tag $SOURCE_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE
  only:
    - master
deploy_tag:
  stage: deploy
  tags:
    - docker
  script:
    - TARGET_IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - SOURCE_IMAGE=$CONTAINER_TEST_IMAGE
    - docker pull $SOURCE_IMAGE
    - docker tag $SOURCE_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE
  only:
    - tags
